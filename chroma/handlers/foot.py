"""
Creates an includable theme file for foot terminal.

To use this theme, add the following line into your foot config, where
`<path>` should be replaced by the output file provided to Chroma.

```ini
[main]
include=<path>
```

This will make sure to import the theme dynamically, so the entire config file
doesn't have to be modified to change the theme. If other includes exist, then 
they might interfere with the themes generated by Chroma.
"""

from pathlib import Path

import chroma
from chroma import utils
from chroma.logger import Logger
from chroma.colors import Color

logger = Logger.get_logger()

FOOT_HEADER = f"# {chroma.CHROMA_GENERATED_HEADER}"


def apply(group, _):
    colors = group.get("colors")
    if colors is None:
        logger.info("Colors for Foot group is unset. Skipping handler.")
        return

    # TODO: actually support all the themable options in foot like this:
    # https://man.archlinux.org/man/foot.ini.5.en
    theme = {
        "foreground": colors["foreground"],
        "background": colors["background"],
        "selection-foreground": colors["selection_foreground"],
        "selection-background": colors["selection_background"],
        "regular0": colors["black"],
        "regular1": colors["red"],
        "regular2": colors["green"],
        "regular3": colors["yellow"],
        "regular4": colors["blue"],
        "regular5": colors["magenta"],
        "regular6": colors["cyan"],
        "regular7": colors["white"],
        "bright0": colors["bright_black"],
        "bright1": colors["bright_red"],
        "bright2": colors["bright_green"],
        "bright3": colors["bright_yellow"],
        "bright4": colors["bright_blue"],
        "bright5": colors["bright_magenta"],
        "bright6": colors["bright_cyan"],
        "bright7": colors["bright_white"],
    }

    if not utils.validate_header(Path(group["out"]), FOOT_HEADER):
        logger.error("Cannot write configuration for Foot. Skipping handler.")
        return

    generated_theme = []
    generated_theme.append(FOOT_HEADER)
    generated_theme.append("[colors]")

    for k, v in theme.items():
        if v is None:
            logger.info(f"Key {k} is unset.")
            continue
        col = Color(v, "hex").to("hexval")
        generated_theme.append(f"{k}={col}")

    # Manually insert newlines to make it play well with file.writelines()
    generated_theme = [line + "\n" for line in generated_theme]

    try:
        with open(Path(group["out"]).expanduser(), "w") as f:
            f.writelines(generated_theme)
    except FileNotFoundError as e:
        logger.error(e)
        logger.fatal("Failed to open file. Does the parent directory exist?")

    logger.info("Successfully applied Foot theme!")
